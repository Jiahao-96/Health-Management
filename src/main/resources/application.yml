server:
  port: 9002

spring:
  application:
    name: health_oms_backend
  task:
    execution:
      pool:
        size: 10
        thread-name-prefix: custom-thread-

  #指定启动环境
  profiles:
    active: local

  # datasource
  datasource:
    driver-class-name: ${health.datasource.driver-class-name}
    url: ${health.datasource.url}
    username: ${health.datasource.username}
    password: ${health.datasource.password}

  #redis
  redis:
    host: ${health.redis.host}
    port: ${health.redis.port}
    password: ${health.redis.password}
    database: ${health.redis.database}

#日志
logging:
  level:
    #生产环境一般使用info级别，开发和测试环境使用debug级别
    root: info

# mybatis
mybatis:
  # mapper映射文件路径
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.itheima.health.pojo
  configuration:
    # sql日志输出
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

#分页插件
pagehelper:
  # 指定使用的数据库类型
  helperDialect: mysql


# 阿里云oss
health:
  alioss:
    url-prefix: ${health.alioss.url-prefix}
    endpoint: ${health.alioss.endpoint}
    access-key-id: ${health.alioss.access-key-id}
    access-key-secret: ${health.alioss.access-key-secret}
    bucket-name: ${health.alioss.bucket-name}

  aliyun:
    sms:
      endpoint: ${health.aliyun.sms.endpoint}
      accessKeyId: ${health.aliyun.sms.accessKeyId}
      accessKeySecret: ${health.aliyun.sms.accessKeySecret}
      signName: ${health.aliyun.sms.signName}
      templateCode: ${health.aliyun.sms.templateCode}

  pbkdf2:
    salt: ${health.pbkdf2.salt}
    iterations: ${health.pbkdf2.iterations}
    keyLength: ${health.pbkdf2.keyLength}
    sceretKey: ${health.pbkdf2.sceretKey}


